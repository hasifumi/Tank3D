// Generated by CoffeeScript 1.3.3
(function() {
  var FieldScene, Tank, Tank3D,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  Tank3D = (function(_super) {

    __extends(Tank3D, _super);

    Tank3D.prototype.config = {
      WIDTH: 640,
      HEIGHT: 640,
      FPS: 30
    };

    Tank3D.prototype.CONST = {
      MODEL_TANK: "./model/tank.pmo"
    };

    function Tank3D() {
      Tank3D.__super__.constructor.call(this, this.config.WIDTH, this.config.HEIGHT);
      this.fps = this.config.FPS;
      this.preload(this.CONST.MODEL_TANK);
      this.onload = function() {
        this.tank = new Tank();
        this.scenes = {};
        this.scenes.field = new FieldScene([this.tank]);
        this.replaceScene(this.scenes.field);
      };
      this.start();
    }

    return Tank3D;

  })(Game);

  window.onload = function() {
    return new Tank3D;
  };

  Tank = (function(_super) {

    __extends(Tank, _super);

    function Tank(map) {
      this.game = enchant.Game.instance;
      this.set(this.game.assets[this.game.CONST.MODEL_TANK]);
    }

    return Tank;

  })(Sprite3D);

  FieldScene = (function(_super) {

    __extends(FieldScene, _super);

    function FieldScene(obj3d) {
      var camera, game, light, obj, _i, _len;
      FieldScene.__super__.constructor.call(this);
      game = enchant.Game.instance;
      console.log("FieldScene loaded");
      light = new DirectionalLight();
      light.color = [1.0, 1.0, 1.0];
      this.setDirectionalLight(light);
      camera = new Camera3D();
      camera.x = 0;
      camera.y = 1;
      camera.z = 15;
      camera.centerY = -1;
      this.setCamera(camera);
      for (_i = 0, _len = obj3d.length; _i < _len; _i++) {
        obj = obj3d[_i];
        this.addChild(obj);
      }
    }

    return FieldScene;

  })(Scene3D);

}).call(this);
